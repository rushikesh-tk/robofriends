{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","_ref","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCFSC,EAdF,SAACC,GACb,OAECC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,MAAMC,IAAG,wBAAAC,OAA0BP,EAAMQ,GAAhC,cACjBP,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,MACXR,EAAAC,EAAAC,cAAA,SAAIH,EAAMU,UCgBAC,EArBE,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACnB,OACCZ,EAAAC,EAAAC,cAAA,WAEEU,EAAOC,IAAI,SAACC,EAAKC,GAEjB,OACEf,EAAAC,EAAAC,cAACc,EAAD,CACAC,IAAKF,EACLR,GAAIK,EAAOG,GAAGR,GACdC,KAAMI,EAAOG,GAAGP,KAChBC,MAAOG,EAAOG,GAAGN,YCARS,EAbG,SAAAP,GAAoCA,EAAjCQ,YAAiC,IAAnBC,EAAmBT,EAAnBS,aAClC,OACCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACCC,UAAU,mCACVkB,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCCI,SARA,SAACzB,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKuB,MAAO,CAAEC,SAAU,SAASC,OAAO,oBAAoBC,OAAO,UAClE7B,EAAM8B,YCgDKC,cA5Cb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBDI,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAACrB,YAAYoB,EAAME,OAAOC,SAjBzCX,EAAKY,MAAQ,CACZ/B,OAAO,GACPO,YAAa,IAJFY,mFAQM,IAAAa,EAAAV,KAClBW,MAAM,8CACLC,KAAK,SAAAC,GACL,OAAOA,EAASC,SAEhBF,KAAK,SAAAG,GACLL,EAAKJ,SAAS,CAAC5B,OAAOqC,uCAQhB,IAAAC,EAAAhB,KACCiB,EAAiBjB,KAAKS,MAAM/B,OAAOwC,OAAO,SAAAxC,GAC/C,OAAOA,EAAOJ,KAAK6C,cAAcC,SAASJ,EAAKP,MAAMxB,YAAYkC,iBAGlE,OAAgC,IAA7BnB,KAAKS,MAAM/B,OAAO2C,OACbvD,EAAAC,EAAAC,cAAA,qBAIPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACsD,EAAD,CAAWpC,aAAcc,KAAKI,iBAC9BtC,EAAAC,EAAAC,cAACuD,EAAD,KACAzD,EAAAC,EAAAC,cAACwD,EAAD,CAAU9C,OAAQuC,aAtCPQ,aCAlBC,IAASC,OAAQ7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe,SN0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.c5648eed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = (props) => {\n\treturn(\n\t\t\n\t\t<div className='bg-dark-maroon dib pa3 br3 ma2 grow bw2 shadow-4'>\n\t\t\t<img alt='pic' src={`https://robohash.org/${props.id}?200*200`}/>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{props.name}</h2>\n\t\t\t\t\t<p>{props.email}</p>\n\t\t\t\t</div>\n\t\t</div>\n\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((user,i) => {\n\n\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\n\t\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield , searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='Search Robots' \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t\t<div style={{ overflow: 'scroll',border:'2.5px solid black',height:'800px' }}>\n\t\t\t{props.children}\n\t\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\n\nclass App extends Component {\n\n\t\tconstructor(){\n\t\t\tsuper()\n\t\t\tthis.state = {\n\t\t\t\trobots:[],\n\t\t\t\tsearchfield: ''\n\t\t\t}\n\t\t}\n\n\t\tcomponentDidMount(){\n\t\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=>{\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(users=>{\n\t\t\t\tthis.setState({robots:users})\n\t\t\t});\n\t\t}\n\n\t\tonSearchChange = (event) => {\n\t\t\t\tthis.setState({searchfield:event.target.value})\n\t\t\t}\n\n\t\trender(){\n\t\t\t\t\tconst filteredRobots = this.state.robots.filter(robots =>{\n\t\t\t\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\tif(this.state.robots.length === 0){\n\t\t\t\t\t\treturn <h1>Loading</h1>\n\t\t\t\t\t} else {\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='tc'>\n\t\t\t\t\t\t\t<h1 className='f2'>RoboFriends</h1>\n\t\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\t\n\t\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t);\n\t\t\t\t}\t\n\t\t\t}\n\t}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}